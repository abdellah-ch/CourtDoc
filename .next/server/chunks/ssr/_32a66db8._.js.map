{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abdellah/Documents/messagerie-app/src/lib/manageUsers.ts"],"sourcesContent":["\"use server\";\r\nimport prisma from \"./prisma\";\r\n\r\nexport async function createUser(data: {\r\n  CodeUtilisateur: number;\r\n  MotDePasse: string;\r\n  Nom: string;\r\n  Prenom: string;\r\n  Tel: string;\r\n  Email: string;\r\n  DateEmbauche: Date;\r\n  DateAffectation: Date;\r\n  IdRole: number;\r\n  IdCadre: number;\r\n  IdUserFonctionne: number;\r\n}) {\r\n  try {\r\n    const user = await prisma.utilisateurs.create({\r\n      data,\r\n    });\r\n    return user;\r\n  } catch (error) {\r\n    console.error(\"Error creating user:\", error);\r\n    throw new Error(\"Failed to create user\");\r\n  }\r\n}\r\n\r\nexport async function getAllUsers() {\r\n  try {\r\n    const users = await prisma.utilisateurs.findMany({\r\n      include: {\r\n        Cadre: true,\r\n        UserFonctionne: true,\r\n        Roles: true,\r\n      },\r\n    });\r\n    return users;\r\n  } catch (error) {\r\n    console.error(\"Error fetching users:\", error);\r\n    throw new Error(\"Failed to fetch users\");\r\n  }\r\n}"],"names":[],"mappings":";;;;;;IAGsB,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abdellah/Documents/messagerie-app/src/lib/manageUsers.ts"],"sourcesContent":["\"use server\";\r\nimport prisma from \"./prisma\";\r\n\r\nexport async function createUser(data: {\r\n  CodeUtilisateur: number;\r\n  MotDePasse: string;\r\n  Nom: string;\r\n  Prenom: string;\r\n  Tel: string;\r\n  Email: string;\r\n  DateEmbauche: Date;\r\n  DateAffectation: Date;\r\n  IdRole: number;\r\n  IdCadre: number;\r\n  IdUserFonctionne: number;\r\n}) {\r\n  try {\r\n    const user = await prisma.utilisateurs.create({\r\n      data,\r\n    });\r\n    return user;\r\n  } catch (error) {\r\n    console.error(\"Error creating user:\", error);\r\n    throw new Error(\"Failed to create user\");\r\n  }\r\n}\r\n\r\nexport async function getAllUsers() {\r\n  try {\r\n    const users = await prisma.utilisateurs.findMany({\r\n      include: {\r\n        Cadre: true,\r\n        UserFonctionne: true,\r\n        Roles: true,\r\n      },\r\n    });\r\n    return users;\r\n  } catch (error) {\r\n    console.error(\"Error fetching users:\", error);\r\n    throw new Error(\"Failed to fetch users\");\r\n  }\r\n}"],"names":[],"mappings":";;;;;;IA2BsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abdellah/Documents/messagerie-app/src/app/admin/users/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { createUser, getAllUsers } from '@/lib/manageUsers';\r\n\r\nconst ManageUsers = () => {\r\n    interface User {\r\n        IdUtilisateur: number;\r\n        Nom: string;\r\n        Prenom: string;\r\n        Email: string;\r\n        Tel: string;\r\n        Roles?: { Libelle: string };\r\n        Cadre?: { Libelle: string };\r\n        UserFonctionne?: { Libelle: string };\r\n    }\r\n    \r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [formData, setFormData] = useState({\r\n        CodeUtilisateur: '',\r\n        MotDePasse: '',\r\n        Nom: '',\r\n        Prenom: '',\r\n        Tel: '',\r\n        Email: '',\r\n        DateEmbauche: '',\r\n        DateAffectation: '',\r\n        IdRole: '',\r\n        IdCadre: '',\r\n        IdUserFonctionne: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function fetchUsers() {\r\n            const data = await getAllUsers();\r\n            setUsers(data);\r\n        }\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleChange = (e:any) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e:any) => {\r\n        e.preventDefault();\r\n        try {\r\n            await createUser({\r\n                ...formData,\r\n                CodeUtilisateur: parseInt(formData.CodeUtilisateur),\r\n                IdRole: parseInt(formData.IdRole),\r\n                IdCadre: parseInt(formData.IdCadre),\r\n                IdUserFonctionne: parseInt(formData.IdUserFonctionne),\r\n                DateEmbauche: new Date(formData.DateEmbauche),\r\n                DateAffectation: new Date(formData.DateAffectation),\r\n            });\r\n            alert('User created successfully!');\r\n            setFormData({\r\n                CodeUtilisateur: '',\r\n                MotDePasse: '',\r\n                Nom: '',\r\n                Prenom: '',\r\n                Tel: '',\r\n                Email: '',\r\n                DateEmbauche: '',\r\n                DateAffectation: '',\r\n                IdRole: '',\r\n                IdCadre: '',\r\n                IdUserFonctionne: '',\r\n            });\r\n            const data = await getAllUsers();\r\n            setUsers(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Failed to create user');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            <h1 className=\"text-xl font-bold mb-4\">Manage Users</h1>\r\n\r\n            {/* Form */}\r\n            <form onSubmit={handleSubmit} className=\"grid grid-cols-2 gap-4 mb-8\">\r\n                <div>\r\n                    <label className=\"block font-medium\">Code Utilisateur</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"CodeUtilisateur\"\r\n                        value={formData.CodeUtilisateur}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Mot de Passe</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"MotDePasse\"\r\n                        value={formData.MotDePasse}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Nom</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Nom\"\r\n                        value={formData.Nom}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Prenom</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Prenom\"\r\n                        value={formData.Prenom}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Tel</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Tel\"\r\n                        value={formData.Tel}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"Email\"\r\n                        value={formData.Email}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Date Embauche</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"DateEmbauche\"\r\n                        value={formData.DateEmbauche}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Date Affectation</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"DateAffectation\"\r\n                        value={formData.DateAffectation}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Role ID</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"IdRole\"\r\n                        value={formData.IdRole}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">Cadre ID</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"IdCadre\"\r\n                        value={formData.IdCadre}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block font-medium\">User Fonctionne ID</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"IdUserFonctionne\"\r\n                        value={formData.IdUserFonctionne}\r\n                        onChange={handleChange}\r\n                        className=\"w-full border border-gray-300 p-2 rounded\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"col-span-2\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n                    >\r\n                        Add User\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            {/* Table */}\r\n            <table className=\"w-full border-collapse border border-gray-300\">\r\n                <thead>\r\n                    <tr className=\"bg-gray-100\">\r\n                        <th className=\"border border-gray-300 p-2\">Nom</th>\r\n                        <th className=\"border border-gray-300 p-2\">Prenom</th>\r\n                        <th className=\"border border-gray-300 p-2\">Email</th>\r\n                        <th className=\"border border-gray-300 p-2\">Tel</th>\r\n                        <th className=\"border border-gray-300 p-2\">Role</th>\r\n                        <th className=\"border border-gray-300 p-2\">Cadre</th>\r\n                        <th className=\"border border-gray-300 p-2\">User Fonctionne</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user) => (\r\n                        <tr key={user.IdUtilisateur}>\r\n                            <td className=\"border border-gray-300 p-2\">{user.Nom}</td>\r\n                            <td className=\"border border-gray-300 p-2\">{user.Prenom}</td>\r\n                            <td className=\"border border-gray-300 p-2\">{user.Email}</td>\r\n                            <td className=\"border border-gray-300 p-2\">{user.Tel}</td>\r\n                            <td className=\"border border-gray-300 p-2\">{user.Roles?.Libelle}</td>\r\n                            <td className=\"border border-gray-300 p-2\">{user.Cadre?.Libelle}</td>\r\n                            <td className=\"border border-gray-300 p-2\">{user.UserFonctionne?.Libelle}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageUsers;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abdellah/Documents/messagerie-app/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}